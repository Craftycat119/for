class User:    def __init__(self, nickname, password, age):
        self.nickname = nickname        self.password = hash(password)
        self.age = age
    def __repr__(self):        return self.nickname
class Video:
    def __init__(self, title, duration, adult_mode=False):        self.title = title
        self.duration = duration        self.time_now = 0
        self.adult_mode = adult_mode
    def __repr__(self):
        return self.title,self.duration,self.adult_mode
import time

class UrTube:    def __init__(self):
        self.users = []        self.videos = []
        self.current_user = None
    def log_in(self, nickname, password):        """Авторизация пользователя."""
        for user in self.users:            if user.nickname == nickname and user.password == hash(password):
                self.current_user = user                print(f"Пользователь {nickname} успешно вошел.")
                break        else:
            print("Неверный логин или пароль.")
    def register(self, nickname, password, age):        """Регистрация нового пользователя."""
        for user in self.users:            if user.nickname == nickname:
                print(f"Пользователь {nickname} уже существует.")                return
        new_user = User(nickname, password, age)
        self.users.append(new_user)        self.log_in(nickname, password)
        print(f"Пользователь {nickname} зарегистрирован и выполнен вход.")
    def log_out(self):        """Выход из аккаунта."""
        if self.current_user is not None:            self.current_user = None
            print("Вы вышли из аккаунта.")        else:
            print("Вы не вошли в систему.")
    def add(self, *videos):        """Добавление одного или нескольких видео."""
        for video in videos:            if any(v.title == video.title for v in self.videos):
                continue            self.videos.append(video)
    def get_videos(self, search_word):
        """Поиск видео по ключевому слову."""        results = [video.title for video in self.videos
                   if search_word.lower() in video.title.lower()]        return results
    def watch_video(self, title):
        """Просмотр видео."""        if self.current_user is None:
            print("Войдите в аккаунт, чтобы смотреть видео")            return
        found_video = next((v for v in self.videos if v.title == title), None)
        if found_video is None:            print("Видео не найдено.")
            return
        if found_video.adult_mode and self.current_user.age < 18:            print("Вам нет 18 лет, пожалуйста покиньте страницу")
            return
        print(f"Воспроизведение видео '{found_video.title}'...")        while found_video.time_now <= found_video.duration:
            print(found_video.time_now)            found_video.time_now += 1

        found_video.time_now = 0        print("Конец видео")
ur = UrTube()
v1 = Video('Лучший язык программирования 2024 года', 200)v2 = Video('Для чего девушкам парень программист?', 10, adult_mode=True)
# Добавление видеоur.add(v1, v2)
# Проверка поискаprint(ur.get_videos('лучший'))
print(ur.get_videos('ПРОГ'))# Проверка на вход пользователя и возрастное ограничение
ur.watch_video('Для чего девушкам парень программист?')ur.register('vasya_pupkin', 'lolkekcheburek', 13)
ur.watch_video('Для чего девушкам парень программист?')ur.register('urban_pythonist', 'iScX4vIJClb9YQavjAgF', 25)
ur.watch_video('Для чего девушкам парень программист?')# Проверка входа в другой аккаунт
ur.register('vasya_pupkin', 'F8098FM8fjm9jmi', 55)print(ur.current_user)
# Попытка воспроизведения несуществующего видеоur.watch_video('Лучший язык программирования 2024 года!')